blueprint:
  name: Ring Intercom – Klingelbenachrichtigung (TTS + Push + Zeit)
  description: >
    Gibt bei Klingeln eine Nachricht über Lautsprecher (z. B. HomePods) mit TTS aus
    und sendet zusätzlich eine Push-Nachricht. Nur aktiv im definierten Zeitfenster.
  domain: automation
  input:
    ring_sensor:
      name: Klingelsensor
      description: Entität, die das Klingeln meldet (z. B. binary_sensor.ring_klingel)
      selector:
        entity:
          domain: binary_sensor

    media_players:
      name: Lautsprecher (TTS-Ziel)
      description: Wähle Lautsprecher für die Benachrichtigung
      selector:
        target:
          entity:
            domain: media_player

    tts_service:
      name: TTS-Service
      description: Text-to-Speech Dienst (z. B. tts.google_say)
      default: tts.google_say
      selector:
        text:

    tts_message:
      name: TTS-Nachricht
      description: Gesprochener Text bei Klingelereignis
      default: "Es hat jemand an der Tür geklingelt!"
      selector:
        text:

    notify_device:
      name: Push-Gerät
      description: Mobilgerät für Push-Benachrichtigung (Home Assistant App)
      selector:
        device:
          integration: mobile_app

    push_message:
      name: Push-Nachricht
      description: Text der Benachrichtigung an dein Mobilgerät
      default: "Klingel: Es hat jemand an der Tür geklingelt."
      selector:
        text:

    start_time:
      name: Startzeit
      description: Frühester Zeitpunkt, an dem die Benachrichtigung erfolgen darf
      default: "07:00:00"
      selector:
        time:

    end_time:
      name: Endzeit
      description: Spätester Zeitpunkt, an dem die Benachrichtigung erfolgen darf
      default: "22:00:00"
      selector:
        time:

trigger:
  - platform: state
    entity_id: !input ring_sensor
    from: "off"
    to: "on"

condition:
  - condition: time
    after: !input start_time
    before: !input end_time

action:
  - variables:
      media_player_entities: "{{ expand(targets.media_players) | map(attribute='entity_id') | list }}"
  - repeat:
      for_each: "{{ media_player_entities }}"
      sequence:
        - service: !input tts_service
          data:
            entity_id: "{{ repeat.item }}"
            message: !input tts_message

  - service: >
      notify.mobile_app_{{ device_attr(!input notify_device, 'name') | lower | replace(' ', '_') }}
    data:
      message: !input push_message

mode: single
